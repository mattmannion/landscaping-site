@mixin respond($breakpoint) {
  @if $breakpoint==fourK {
    @media screen and (min-width: 2560px) {
      @content;
    }
  }

  @if $breakpoint==desktop {
    @media screen and (min-width: 1920px) {
      @content;
    }
  }

  @if $breakpoint==desktop-s {
    @media screen and (min-width: 1440px) {
      @content;
    }
  }

  @if $breakpoint==fourthree {
    @media screen and (min-width: 1024px) {
      @content;
    }
  }

  @if $breakpoint==tab {
    @media screen and (min-width: 768px) {
      @content;
    }
  }

  @if $breakpoint==tab-max {
    @media screen and (max-width: 768px) {
      @content;
    }
  }

  @if $breakpoint==phone-l {
    @media screen and (min-width: 425px) {
      @content;
    }
  }

  @if $breakpoint==phone-m {
    @media screen and (max-width: 375px) {
      @content;
    }
  }

  @if $breakpoint==phone-m-min {
    @media screen and (min-width: 375px) {
      @content;
    }
  }

  @if $breakpoint==phone-s {
    @media screen and (max-width: 320px) {
      @content;
    }
  }

  @if $breakpoint==phone-xs {
    @media screen and (max-width: 280px) {
      @content;
    }
  }
}

@mixin centerFlex {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin fixedCenter {
  position: absolute;
  z-index: 1;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin linkStyle-link-visited {
  text-decoration: none;
  color: $sage-main;
  padding-bottom: 0.25rem;
  border-bottom: $sage-main 1px solid;
  font-weight: 300;
  font-weight: 700;
}

@mixin linkStyle-active-hover {
  text-decoration: none;
  color: $sage-secondary;
  border-bottom: $sage-secondary 1px solid;
}

@mixin boxShadow {
  box-shadow: 1rem 1rem 5rem rgba($black, 0.5);
}

@mixin boxShadow-thick {
  box-shadow: 1rem 1rem 5rem rgba($black, 0.75);
}

@mixin fixedBG {
  background-size: cover;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-position: center;
}

@mixin Fade-In($value, $timer) {
  @keyframes fadeIn {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }

  $animation-value: $value;
  $animation-timer: $timer;

  & {
    opacity: 0;
    /* make things invisible upon start */
    -webkit-animation: fadeIn ease-in $animation-value;
    /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
    -moz-animation: fadeIn ease-in $animation-value;
    animation: fadeIn ease-in $animation-value;

    -webkit-animation-fill-mode: forwards;
    /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
    -moz-animation-fill-mode: forwards;
    animation-fill-mode: forwards;

    -webkit-animation-duration: $animation-timer;
    -moz-animation-duration: $animation-timer;
    animation-duration: $animation-timer;
  }
}